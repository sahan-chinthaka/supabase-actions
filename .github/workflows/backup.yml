name: Database Backup

on:
  pull_request:
    types: [closed]
    branches: [main, dev]
  workflow_dispatch: # Manual trigger

jobs:
  backup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install PostgreSQL client and AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client python3-pip
          pip3 install awscli
      - name: Set timestamp
        run: echo "TIMESTAMP=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV

      - name: Create backup
        env:
          PGPASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          PGHOST: ${{ secrets.DATABASE_HOST }}
          PGUSER: ${{ secrets.DATABASE_USER }}
          PGDATABASE: ${{ secrets.DATABASE_NAME }}
        run: |
          pg_dump -Fc > "backup_${TIMESTAMP}.dump"

      - name: Configure AWS CLI for R2
        run: |
          aws configure set aws_access_key_id ${{ secrets.R2_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.R2_SECRET_ACCESS_KEY }}
          aws configure set region auto

      - name: Upload to R2
        env:
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
        run: |
          aws s3 cp backup_${TIMESTAMP}.dump s3://your-bucket-name/backups/backup_${TIMESTAMP}.dump --endpoint-url $R2_ENDPOINT
